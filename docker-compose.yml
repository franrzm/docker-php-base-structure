services:
  webserver:
    container_name: webserver
    build:
      context: etc/webserver
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 3s
      timeout: 10s
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./etc/webserver/conf/server.conf:/etc/nginx/conf.d/default.conf
      - ./etc/webserver/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./app:/app
    networks:
      - app
  app:
    container_name: app
    build:
      target: ${APP_ENV}
      context: etc/app
    expose:
      - "9000"
    volumes:
      - ./app:/app
      - ./etc/app/conf.d/php-fpm.conf:/usr/local/etc/php-fpm.d/z-php-fpm.conf
    entrypoint: [ "php" ]
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "php", "-r", "echo 'Status: Ok';" ]
      interval: 3s
      timeout: 10s
    tty: true
    working_dir: /app
    networks:
      - app
  composer:
    container_name: composer
    build:
      target: ${APP_ENV}
      context: etc/app
    volumes:
      - ./app:/app
    entrypoint: [ "composer" ]
    depends_on:
      app:
        condition: service_healthy
    tty: true
    working_dir: /app
    networks:
      - app
  db:
    container_name: db
    build:
      context: ./etc/db
    volumes:
      - database:/var/lib/postgresql
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}" ]
      interval: 3s
      timeout: 10s
      retries: 4
    tty: true
    working_dir: /app
    networks:
      - app

networks:
  app:

volumes:
  database:
    driver: local
